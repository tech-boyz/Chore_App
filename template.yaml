AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Chore_App

  Sample SAM Template for Chore_App
Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-chore-app
    Description: App to keep track of chores.
    Author: tharalso
    Labels: ['tests']
    HomePageUrl: https://github.com/tharalso/Chore_App
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/tharalso/Chore_App
   
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  GetAllChores:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      VpcConfig: 
        SecurityGroupIds: [ "sg-d2c055a0" ]
        SubnetIds: [ "subnet-0067985a" , "subnet-e6eb4980"]
      CodeUri: ./get-all-chores/
      Handler: app.lambdaHandler
      Events: 
        HelloWorld:
          Type: Api
          Properties:
            Path: /GetAllChores
            Method: get
      Environment:
        Variables:
          POSTGRES_DBNAME: "postgres"
          POSTGRES_HOST: "chore-chart.cwjhutxwgvqs.us-west-1.rds.amazonaws.com"
          POSTGRES_PASS: "UuOW9n2fvCZbKxS64R0v"
          POSTGRES_PORT: "5432"
          POSTGRES_USER: "anteaters" 

  GetAllUserChores:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      VpcConfig: 
        SecurityGroupIds: [ "sg-d2c055a0" ]
        SubnetIds: [ "subnet-0067985a" , "subnet-e6eb4980"]
      CodeUri: get-all-user-chores/getAllUserChores.js
      Handler: getAllUserChores.lambdaHandler
      Events: 
        HelloWorld:
          Type: Api
          Properties:
            Path: /GetAllUserChores
            Method: get
      Environment:
        Variables:
          POSTGRES_DBNAME: "postgres"
          POSTGRES_HOST: "chore-chart.cwjhutxwgvqs.us-west-1.rds.amazonaws.com"
          POSTGRES_PASS: "UuOW9n2fvCZbKxS64R0v"
          POSTGRES_PORT: "5432"
          POSTGRES_USER: "anteaters"
    

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
